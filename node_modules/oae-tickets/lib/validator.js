/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');
var AuthzUtil = require('oae-authz/lib/util');
var Validator = module.exports.Validator = require('oae-util/lib/validator').Validator;

/**
 * Checks whether or not the string in context is a valid ticket id
 *
 * Usage:
 * ```
 * var validator = new Validator();
 * validator.check(ticketId, error).isTicketId();
 * ```
 */
Validator.prototype.isTicketId = function() {
    if (!this.str) {
        this.error(this.msg || 'An empty ticket id was provided');
    } else if (this.str.split(':').length < 3) {
        this.error(this.msg || 'A ticket id must be of the format: "t:<tenantAlias>:<instanceId>". "' + this.str + '" does not satisfy that.');
    } else if (this.str.split(':')[0] !== 't') {
        this.error(this.msg || 'A ticket id must start with a \'t\'. "' + this.str + '" does not satisfy that.');
    } else if (AuthzUtil.isUserId(this.str)) {
        this.error(this.msg || 'A user id is not a valid ticket id: ' + this.str);
    }
};
