/*!
 * Copyright 2015 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var OAE = require('oae-util/lib/oae');

var MixPanelAPI = require('oae-mixpanel/lib/api');


/////////////
// CONTENT //
/////////////

/**
 * Convenience method to handle getting the total file size of uploaded files for one or multiple tenants
 *
 * @param  {Request}    req     The Express Request object of the current request
 * @param  {Response}   res     The Express Response object to which to send the response
 * @api private
 */
var _getFileSize = function(req, res) {
    MixPanelAPI.getUploadedFilesFileSize(req.ctx, null, function(err, data) {
        if (err) {
            return res.status(err.code).send(err.msg);
        }

        return res.status(200).send(data);
    });
};

/**
 * @REST getUploadedFilesFileSize
 *
 * Get the total file size of uploaded files stats for the current month for the current tenant
 *
 * @Server      admin,tenant
 * @Method      GET
 * @Path        /mixpanel/stats/fileSize
 * @Return      {Object}                        Object containing the total file size of uploaded files for all tenants
 * @HttpResponse                    200         The total uploaded file size for all tenants
 * @HttpResponse                    401         Must be an administrator user to view the stats
 * @HttpResponse                    403         MixPanel is not enabled
 */
OAE.globalAdminRouter.on('get', '/api/mixpanel/stats/fileSize', _getFileSize);
OAE.tenantRouter.on('get', '/api/mixpanel/stats/fileSize', _getFileSize);

/**
 * @REST getUploadedFilesFileSizeForTenant
 *
 * Get the total file size of uploaded files stats for the current month for a specific tenant
 *
 * @Server      admin
 * @Method      GET
 * @Path        /mixpanel/stats/fileSize/{tenantAlias}
 * @Return      {Object}                        Object containing the total file size of uploaded files for a specific tenant
 * @HttpResponse                    200         The total uploaded file size for a specific tenant
 * @HttpResponse                    400         Missing tenant alias
 * @HttpResponse                    401         Must be a global administrator user to view the stats
 * @HttpResponse                    403         MixPanel is not enabled
 */
OAE.globalAdminRouter.on('get', '/api/mixpanel/stats/fileSize/:tenantAlias', function(req, res) {
    MixPanelAPI.getUploadedFilesFileSize(req.ctx, req.params.tenantAlias, function(err, data) {
        if (err) {
            return res.status(err.code).send(err.msg);
        }

        return res.status(200).send(data);
    });
});


///////////
// USERS //
///////////

/**
 * Convenience method to handle getting the unique users for one or multiple tenants
 *
 * @param  {Request}    req     The Express Request object of the current request
 * @param  {Response}   res     The Express Response object to which to send the response
 * @api private
 */
var _getUniqueUsers = function(req, res) {
    MixPanelAPI.getUniqueUsers(req.ctx, null, function(err, data) {
        if (err) {
            return res.status(err.code).send(err.msg);
        }

        return res.status(200).send(data);
    });
};

/**
 * @REST getUniqueUsers
 *
 * Get the unique user count stats for the current month for the current tenant
 *
 * @Server      admin,tenant
 * @Method      GET
 * @Path        /mixpanel/stats/uniqueUsers
 * @Return      {Object}                        Object containing the unique users for all tenants
 * @HttpResponse                    200         The unique users for all tenants
 * @HttpResponse                    401         Must be an administrator user to view the stats
 * @HttpResponse                    403         MixPanel is not enabled
 */
OAE.globalAdminRouter.on('get', '/api/mixpanel/stats/uniqueUsers', _getUniqueUsers);
OAE.tenantRouter.on('get', '/api/mixpanel/stats/uniqueUsers', _getUniqueUsers);

/**
 * @REST getUniqueUsersForTenant
 *
 * Get the unique user count stats for the current month for a specific tenant
 *
 * @Server      admin
 * @Method      GET
 * @Path        /mixpanel/stats/uniqueUsers/{tenantAlias}
 * @Return      {Object}                        Object containing the unique users for a specific tenant
 * @HttpResponse                    200         The unique users for a specific tenant
 * @HttpResponse                    400         Missing tenant alias
 * @HttpResponse                    401         Must be a global administrator user to view the stats
 * @HttpResponse                    403         MixPanel is not enabled
 */
OAE.globalAdminRouter.on('get', '/api/mixpanel/stats/uniqueUsers/:tenantAlias', function(req, res) {
    MixPanelAPI.getUniqueUsers(req.ctx, req.params.tenantAlias, function(err, data) {
        if (err) {
            return res.status(err.code).send(err.msg);
        }

        return res.status(200).send(data);
    });
});
