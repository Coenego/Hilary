/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var TicketsConstants = require('./constants').TicketsConstants;

/**
 * A Ticket model
 * The object stores information about the ticket that is linked to a publication
 *
 * @param  {String}     ticketId        The ticket id (e.g. t:cam:1D2d3E92Ds)
 * @param  {String}     externalId      The ticket id (e.g. OA-123456)
 * @param  {String}     tenantAlias     The tenant where the ticket was created in
 * @param  {String}     publicationId   The publication id (e.g. p:cam:1D2d3E9-7f)
 * @param  {String}     createdBy       The id of the person that created the ticket
 * @param  {String}     created         The date of creation
 * @param  {String}     lastModified    When the ticket was last updated
 * @param  {String}     status          The current status of the ticket
 * @return {Ticket}                     The created ticket
 */
module.exports.Ticket = function(ticketId, externalId, tenantAlias, publicationId, createdBy, created, lastModified, status) {
    var that = {};
    that.ticketId = ticketId;
    that.externalId = externalId;
    that.tenantAlias = tenantAlias;
    that.publicationId = publicationId;
    that.createdBy = createdBy;
    that.created = created;
    that.lastModified = lastModified;
    that.status = status || TicketsConstants.statusses.PENDING;
    return that;
};

/**
 * A PublicationTicket model
 * The object is used when we want to retrieve the ticket that is linked to a publication
 *
 * @param  {String}     publicatoinId       The ID of the publication (e.g. p:cam:1D2d3E9-7f)
 * @param  {String}     ticketId            The ID of the ticket (e.g. OA-123456)
 */
module.exports.PublicationTicket = function(publicationId, ticketId) {
    var that = {};
    that.publicationId = publicationId;
    that.ticketId = ticketId;
    return that;
};
