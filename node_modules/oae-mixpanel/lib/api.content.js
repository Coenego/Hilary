/*!
 * Copyright 2015 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');
var TenantsAPI = require('oae-tenants/lib/api');
var Validator = require('oae-util/lib/validator').Validator;

var MixPanelAPI = require('./api');
var MixPanelUtil = require('./util');

/**
 * Get the total size of uploaded files for the current month for
 * a specific tenant or the current tenant.
 * @see https://mixpanel.com/docs/api-documentation/data-export-api
 *
 * Exporter return example:
 *
 * ```
 * {
 *     status: "ok",
 *     results: {
 *         2015-07-29: 2489,
 *         2015-07-30: 2989176,
 *         2015-07-31: 670234
 *     }
 * }
 * ```
 *
 * @param  {Context}    ctx                 Standard context object containing the current user and the current tenant
 * @param  {String}     [tenantAlias]       The alias of the tenant to get the stats for. (optional)
 * @param  {Function}   callback            Standard callback function
 * @param  {Object}     callback.err        An error that occurred, if any
 * @param  {Object}     callback.stats      Object containing the stats for the tenant(s)
 */
var getUploadedFilesFileSize = module.exports.getUploadedFilesFileSize = function(ctx, tenantAlias, callback) {
    tenantAlias = tenantAlias || ctx.tenant().alias;

    // Validate the tenant alias
    var validator = new Validator();
    validator.check(tenantAlias, {'code': 400, 'msg': 'The tenant alias should not contain a space'}).notContains(' ');
    validator.check(tenantAlias, {'code': 400, 'msg': 'The tenant alias should not contain a colon'}).notContains(':');
    validator.check(TenantsAPI.getTenant(tenantAlias), {'code': 404, 'msg': 'Invalid tenant alias'}).notEmpty();
    if (validator.hasErrors()) {
        return callback(validator.getFirstError());
    }

    // Validate the permissions
    var mixPanelConfig = MixPanelAPI.getMixPanelConfig();
    if (!mixPanelConfig.enabled) {
        return callback({'code': 403, 'msg': 'MixPanel is not enabled'});
    } else if (!ctx.user() || !ctx.user().isAdmin(tenantAlias)) {
        return callback({'code': 401, 'msg': 'Only administrators can request stats'});
    }

    // Exporter options object
    var options = MixPanelUtil.createExporterOptions('createdContent', tenantAlias, {
        'on': 'properties["filesize"]'
    });

    // Request the data from the MixPanel API
    var exporter = MixPanelUtil.createExporter(mixPanelConfig);
    exporter.sumSegmentation(options, function(data) {
        if (data.error) {
            return callback({'code': 400, 'msg': data.error});
        }

        return callback(null, data);
    });
};
