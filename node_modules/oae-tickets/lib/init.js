/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var Cassandra = require('oae-util/lib/cassandra');

module.exports = function(config, callback) {
    _ensureSchema(function(err) {
        if (err) {
            return callback(err);
        }

        callback();
    });
};

/**
 * Ensure that the all of the ticket-related schema's are created.
 *
 * @param  {Function}   callback        A function(err), specifying whether or not there was an error creating the schema.
 * @param  {Object}     callback.err    Error object containing error code and error message
 * @api private
 */
var _ensureSchema = function(callback) {
    Cassandra.createColumnFamilies({
        'Tickets': 'CREATE TABLE "Tickets" ("ticketId" text, "externalId" text, "tenantAlias" text, "publicationId" text, "createdBy" text, "created" bigint, "lastModified" bigint, "status" text, PRIMARY KEY ("ticketId"))',
        'TicketsByPublication': 'CREATE TABLE "TicketsByPublication" ("publicationId" text, "ticketId" text, PRIMARY KEY ("publicationId"))',
        'TicketsCounter': 'CREATE TABLE "TicketsCounter" ("name" varchar, "value" counter, PRIMARY KEY ("name"))'
    }, callback);
};
